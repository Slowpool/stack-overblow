@using StackOverblowApp.Models.Home
@using ServiceLayer
@using Humanizer

@model ResearchModel;
@inject LinkGenerator linkGenerator

<h3>Results</h3>
<div>
    <b>@Model.ResultsCount results</b>
    <div class="order-by">
    <input type="radio" value="@nameof(QuestionsOrderBy.Relevance)" name="order-by"
        @(Model.OrderBy == QuestionsOrderBy.Relevance ? "checked" : "")>
        @nameof(QuestionsOrderBy.Relevance)
    <input type="radio" value="@nameof(QuestionsOrderBy.Newest)" name="order-by"
        @(Model.OrderBy == QuestionsOrderBy.Newest ? "checked" : "")>
        @nameof(QuestionsOrderBy.Newest)
    <input type="radio" value="@nameof(QuestionsOrderBy.Active)" name="order-by"
        @(Model.OrderBy == QuestionsOrderBy.Active ? "checked" : "")>
        @nameof(QuestionsOrderBy.Active)
    <input type="radio" value="@nameof(QuestionsOrderBy.Score)" name="order-by"
        @(Model.OrderBy == QuestionsOrderBy.Score ? "checked" : "")>
        @nameof(QuestionsOrderBy.Score)
    </div>
    <hr class="bold"/>
</div>


@foreach (var question in Model.Questions)
{
    <div>
        <div class="question-stats">
            @question.VoteCount votes
            <br />
            @question.AnswersCount answers
            <br />
            @question.ViewsCount views
        </div>
        <div>
            <h2>
                <a href="@linkGenerator.GetPathByName("questions", new { questionId = question.QuestionId })">@question.Title</a>
            </h2>
            <br />
            <span class="question-content">
                @(question.Content.Length > 50 ? question.Content.Substring(0, 50) + ".." : question.Content)
            </span>
            <br />
            @if (question.Tags.Count != 0)
            {
                <div class="tags">
                @foreach (var tag in question.Tags)
                {
                    <a href="something">@tag.Name</a>
                }
                </div>
            }
            <div class="user-info">
                pic
                <a class="user-mini-nickname" @(question.AuthorId != 0 ? $"href=/users/{question.AuthorId}" : "")>@question.AuthorNickname</a>
                <span class="user-mini-score">@question.AuthorReputation</span>
                asked @question.AskedAt.ToString(@"MMM M, yyyy a\t H:mm")
            </div>
        </div>
    </div>
    <br />
    <hr class="narrow"/>
}